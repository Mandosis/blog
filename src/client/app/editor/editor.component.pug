header
  input(type="text" "[(ngModel)]"="post.title" "(click)"="viewSettings = false")
  button.publish Publish
  button.settings("(click)"="extendSettings()")
    i.fa.fa-cog


section("(click)"="viewSettings = false")

  //- Editor Controls
  ul.controls("(mousedown)"="$event.preventDefault()")
    li
      i.fa.fa-header

      //- Choose heading level
      ul.dropdown
        li("(click)"="insertSyntax('# ', 'nowrap')")
          span H1
        li("(click)"="insertSyntax('## ', 'nowrap')")
          span H2
        li("(click)"="insertSyntax('### ', 'nowrap')")
          span H3
        li("(click)"="insertSyntax('#### ', 'nowrap')")
          span H4
        li("(click)"="insertSyntax('##### ', 'nowrap')")
          span H5
        li("(click)"="insertSyntax('###### ', 'nowrap')")
          span H6

    //- Bold
    li("(click)"="insertSyntax('**', 'wrap')")
      i.fa.fa-bold

    //- Italic
    li("(click)"="insertSyntax('_', 'wrap')")
      i.fa.fa-italic

    //- Strikethrough
    li("(click)"="insertSyntax('~~', 'wrap')")
      i.fa.fa-strikethrough

    //- Ordered List
    li
      i.fa.fa-list-ol

    //- Unordered List
    li("(click)"="insertSyntax('-', 'list')")
      i.fa.fa-list-ul

    //- Link
    li("(click)"="insertSyntax('[]()', 'nowrap')")
      i.fa.fa-link

    //- Picture
    li("(click)"="insertSyntax('![]()', 'nowrap')")
      i.fa.fa-picture-o

    //- Code Editor
    li("(click)"="insertCodeEditor()")
      i.fa.fa-code

  //- Editor Body

  section.editor("(click)"="focusLastInput($event)" "(scroll)"="syncScrollPosition()")
    div.input("*ngFor"="let input of inputs")
      markdown-editor( "[(ngModel)]"="input.value" "*ngIf"="input.type == 'markdown'")
      code-editor("[(ngModel)]"="input.value" "*ngIf"="input.type == 'code'"  "[config]"="{ lineNumbers: true, mode: input.language}")

  //- Preview
  section.preview
    div("*ngFor"="let input of inputs")
      span("*ngIf"="input.type == 'markdown'" "[innerHtml]"="input.value | markdown")
      pre("*ngIf"="input.type == 'code'" "[ngClass]"="addLanguageClass(input)" "[attr.data-title]"="input.language")
        code("[ngClass]"="addLanguageClass(input)" "[innerHtml]"="input.value | prism:input.language")

footer("(click)"="viewSettings = false")
  section.left
    p.name Markdown
  section.right
    p.name Preview
    p.count Word Count: {{post.body | wordCount }}

aside("[class.open]"="viewSettings")

  p Cover Image
  input(type="file" disabled)

  p Tags
  input(type="text" disabled)

  p url
  input(type="url" "[attr.value]"="post.title | url")
